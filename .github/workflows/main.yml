name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["develop"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        board_target: [esp32s3]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          docker run --rm \
          -v ${{github.workspace}}:/project \
          -w /project \
          -u $(id -u) \
          -e HOME=/tmp \
          -e IDF_TARGET=${{matrix.board_target}} \
          espressif/idf:release-v5.2 \
          idf.py build

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/bootloader/bootloader.bin
            build/partition_table/partition-table.bin
            build/ota_data_initial.bin
            build/${{github.event.repository.name}}.bin
            
      - name: GitHubAssistantBot Preprocess
        id: preprocess_commits
        if: success() || failure()
        run: |
          commits_json=$(cat <<EOL
          ${{toJson(github.event.commits)}}
          EOL
          )

          echo "commits=$(echo "$commits_json" | jq -c '[.[] | {message: .message, url: .url}]' || echo "[]")" >> $GITHUB_OUTPUT

      - name: GitHubAssistantBot
        if: success() || failure()
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://node-red.geeken.me/github_assistant_bot'
          data: |
            {
              "key": "c218f740-fe70-4805-97b9-3bca6bcb1862",
              "actor": "${{github.actor}}",
              "platform": "${{matrix.board_target}}",
              "changes": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
              "commits": ${{steps.preprocess_commits.outputs.commits}},
              "event": "${{github.event_name}}",
              "reference": "${{github.ref_name}}",
              "report": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
              "repository": "${{github.repository}}",
              "status": "${{job.status}}"
            }
